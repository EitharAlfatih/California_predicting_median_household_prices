import pandas as pd
import pandas as pd
suppressPackageStartupMessages(library(foreign))  # For read.dta()
library(tidyverse)
library(quantreg)
library(lubridate)
library(modelr)
(river_flow <-
read_csv("data/flow.csv", col_types = cols()) %>%
mutate(year = year(date), day = yday(date))) %>%
select(year, day, flow)
mean_reg <- loess(formula = flow ~ day, method = "loess", data = river_flow)
med_reg <- rqss(flow ~ qss(day, lambda = 100), tau = 0.5, data = river_flow)
river_flow_regr <- river_flow %>%
add_predictions(mean_reg) %>%
rename(mean_reg_pred = pred) %>%
add_predictions(med_reg) %>%
rename(med_reg_pred = pred) %>%
select(day, flow, mean_reg_pred, med_reg_pred)
ggplot(river_flow_regr) +
geom_point(aes(day, flow), alpha = 0.4) +
geom_line(aes(day, mean_reg_pred), colour = "blue") +
geom_line(aes(day, med_reg_pred), colour = "red") +
labs(x = "Day", y = "flow", title = "Flow rate per day of the year") +
annotate("text", x = 250, y = 400, label = "mean regression", colour = "blue") +
annotate("text", x = 250, y = 375, label = "median regression", colour = "red")
mse(mean_reg, river_flow)
mae(med_reg, river_flow)
mse(mean_reg, river_flow)
mae(med_reg, river_flow)
model <- rqss(flow ~ qss(day, lambda = 100), tau = 0.75, data = river_flow)
river_flow %>%
add_predictions(model) %>%
ggplot() +
geom_point(aes(day, flow), alpha = 0.4) +
geom_line(aes(day, pred), colour = "red") +
labs(x = "Day", y = "Flow", title = "Flow rate per day of the year")
df <- data.frame(day = c(160))
predict(model, newdata = df)
river_flow %>%
add_predictions(model) %>%
mutate(error = flow - pred,
error_val = (0.75 - (error<0))*error) %>%
pull(error_val) %>%
sum()
model_lwr <- rqss(flow ~ qss(day, lambda = 100), tau = 0.05, data = river_flow)
model_upr <- rqss(flow ~ qss(day, lambda = 100), tau = 0.95, data = river_flow)
river_flow_pi <- river_flow %>%
add_predictions(model_lwr) %>%
rename(lwr_prd = pred) %>%
add_predictions(model_upr) %>%
rename(upr_prd = pred) %>%
select(day, flow, lwr_prd, upr_prd)
ggplot(river_flow_pi) +
geom_point(aes(day, flow), alpha = 0.4) +
geom_ribbon(aes(x = day, ymin = lwr_prd, ymax = upr_prd), alpha = 0.3, colour = "red", fill = "red")
river_flow_pi %>%
filter(day == 160) %>%
select(day, lwr_prd, upr_prd) %>%
unique()
r <- 20
river_flow_sub <- river_flow %>%
filter((day >= 160-r & day <= 160+r) |
(day >= 300-r & day <= 300+r)) %>%
mutate(day_category = if_else((day >= 160-r & day <= 160+r), 160, 300))
river_flow_sub %>%
group_by(day_category) %>%
summarise(expected_flow = mean(flow))
ggplot(river_flow_sub, aes(flow)) +
geom_density(aes(fill = factor(day_category)), colour=NA, alpha = 0.6) +
scale_fill_discrete("Day Estimate") +
labs(x = "Flow", y = "Density", title = "River Flow Probabilistic Forecasts")
river_flow_log <- river_flow %>% mutate(log_flow = log(flow))
log_est <- loess(log_flow ~ day, data = river_flow_log)
river_flow_log %>%
add_predictions(log_est) %>%
ggplot(aes(log_flow, pred)) +
geom_point(alpha = 0.3) +
labs(x = "Actual log(flow)", y = "Predicted log(flow)", title = "Predicted vs. Actual log(flow)")
river_flow_log %>%
add_predictions(log_est) %>%
ggplot() +
geom_point(aes(x = day, y = log_flow), alpha = 0.3) +
geom_line(aes(x = day, y = pred), colour = "red", size = 2) +
labs(x = "Day", y = "log(flow)", title = "Actual log(flow) values with Loess Estimate")
river_flow_log <- river_flow_log %>%
select(day, log_flow) %>%
add_predictions(log_est) %>%
rename(log_estimate = pred) %>%
mutate(residuals = log_est$residuals,
squared_residuals = residuals^2)
var_fit <- loess(squared_residuals ~ day, data = river_flow_log)
river_flow_log <- river_flow_log %>%
mutate(var_pred = var_fit$fitted)
ggplot(river_flow_log) +
geom_point(aes(x = day, y = squared_residuals), alpha = 0.3) +
geom_line(aes(x = day, y = var_pred), colour = "red") +
labs(x = "Day", y = "Squared Residuals of log(flow)", title = "Variance Estimate of log(flow)")
river_flow_log %>%
mutate(lwr_q = (log_estimate - (qnorm(0.95)*sqrt(var_pred))),
upr_q = (log_estimate + (qnorm(0.95)*sqrt(var_pred)))) %>%
ggplot() +
geom_point(aes(x = day, y = log_flow), alpha = 0.3) +
geom_line(aes(x = day, y = log_estimate), colour = "red") +
geom_ribbon(aes(x = day, ymin = lwr_q, ymax = upr_q), fill = "red", alpha = 0.3) +
labs(x = "Day", y = "log(flow)", title = "90% Prediction of log(flow)")
setwd("~/Documents/MDS/DSCI_522/DSCI_522_GROUP_312")
